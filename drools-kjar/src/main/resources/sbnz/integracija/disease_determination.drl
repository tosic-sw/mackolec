package sbnz.integracija

import com.vet.mackolec.models.*;

import java.util.*;

function boolean isMemberOf(Symptom symptom, Set symptoms) {
	for (Object element: symptoms) {
        Symptom realSymptom = (Symptom) element;
	    if (realSymptom.getName().equals(symptom.getName()))
	    	return true;
    }
	return false;
}

rule "DiseaseDetermination"
	salience (-((double) 100*$value / (double) $symptoms.size() + $value))
	// we are looking for disese that contains most of observed symptoms
	agenda-group "disease_determination"
    when 
    	$therapy: Therapy($observedSymptoms: observedSymptoms)
		$disease: Disease($symptoms: symptoms)
		
    	Number($value: intValue > 0) from accumulate(
        	$oS: ObservedSymptom(eval(isMemberOf(symptom, $symptoms))) from $observedSymptoms,
        	count($oS)
        )
        
    then
    	modify($therapy) { 
    		setDisease((Disease) $disease)
    	}
    	delete($disease);
end