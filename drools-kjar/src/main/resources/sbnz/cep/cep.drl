package sbnz.cep

import com.vet.mackolec.models.HospitalizedCat;
import com.vet.mackolec.models.enums.NotificationType;
import com.vet.mackolec.events.HeartBeatEvent;
import com.vet.mackolec.events.OxygenLevelEvent;
import com.vet.mackolec.events.FluidFlowEvent;
import com.vet.mackolec.events.AlarmNotificationEvent;

rule "More than 35 beats in last minute"
	agenda-group "heart_beat"
    when
    	$hbe1: HeartBeatEvent()
    	Number(intValue >= 35) from accumulate (
    		$hbe2: HeartBeatEvent(this != $hbe1, jmbm == $hbe1.jmbm) 
    		over window:time(60s),
            count($hbe2)
    	)
    	not (AlarmNotificationEvent(jmbm == $hbe1.jmbm))
    then
        System.out.println("ALARM RAISED FOR HEART BEAT " + $hbe1.getJmbm());
        insert(new AlarmNotificationEvent($hbe1.getJmbm(), "Cat has heart problems, possible heart attack!", NotificationType.HEART));
end

rule "Oxygen level less than 94% in last 3 minutes"
	agenda-group "oxygen_level"
    when
    	$ole: OxygenLevelEvent()
    	not (
    		OxygenLevelEvent(jmbm == $ole.jmbm, oxygenLevel >= 94) 
    		over window:time(180s)
    	)
    	not (AlarmNotificationEvent(jmbm == $ole.jmbm))
    then
    	System.out.println("ALARM RAISED FOR OXYGEN LEVEL " + $ole.getJmbm());
        insert(new AlarmNotificationEvent($ole.getJmbm(), "The cat is breathing hard, oxygen level is low! Possible suffocation!", NotificationType.OXYGEN));
end

rule "Problematic infusion fluid level in last 40 seconds"
	agenda-group "fluid_level"
    when
    	$fle: FluidFlowEvent()
    	not (
    		FluidFlowEvent(jmbm == $fle.jmbm, fluidFlow >= 1 && fluidFlow <= 12) 
    		over window:time(40s)
    	)
    	not (AlarmNotificationEvent(jmbm == $fle.jmbm))
    then
    	System.out.println("ALARM RAISED FOR FLUID LEVEL " + $fle.getJmbm());
        insert(new AlarmNotificationEvent($fle.getJmbm(), "Cat has infusion problem with fluid level!", NotificationType.FLUID));
end